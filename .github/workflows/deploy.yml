name: CI/CD-Pipeline (Build, Test and Deploy)

# Controls when the workflow will run
on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:  # Allows the workflow to be triggered manually

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKERHUB_ACCESS_TOKEN=${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_USER=${{ secrets.RDS_MYSQL_USER }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_PASSWORD=${{ secrets.RDS_MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_ENDPOINT=${{ vars.RDS_MYSQL_ENDPOINT }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_PORT=${{ vars.RDS_MYSQL_PORT }}" >> $GITHUB_ENV
          echo "GITHUB_RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build Application
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy:
    needs: [build]
    runs-on: ubuntu-latest
   
    steps:
      # Step 4: Deploy Application to EC2
      - name: Deploy Application
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          AWS_EC2_ACCESS_KEY: ${{ secrets.AWS_EC2_ACCESS_KEY }}    
