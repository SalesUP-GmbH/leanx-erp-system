name: CI/CD-Pipeline (Build -> Test -> Deploy)

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:  # Allows the workflow to be triggered manually

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKERHUB_ACCESS_TOKEN=${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_USER=${{ secrets.RDS_MYSQL_USER }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_PASSWORD=${{ secrets.RDS_MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_ENDPOINT=${{ vars.RDS_MYSQL_ENDPOINT }}" >> $GITHUB_ENV
          echo "RDS_MYSQL_PORT=${{ vars.RDS_MYSQL_PORT }}" >> $GITHUB_ENV
          echo "GITHUB_RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build application and push to Dockerhub
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  test:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run application tests
        run: |
          chmod +x ./scripts/test.sh
          ./scripts/test.sh
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        continue-on-error: false


  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
   
    steps:
      - name: Deploy Application to EC2
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          AWS_EC2_ACCESS_KEY: ${{ secrets.AWS_EC2_ACCESS_KEY }}
          EC2_USER: ${{ vars.EC2_USER }}
          EC2_PUBLIC_IP: ${{ vars.EC2_PUBLIC_IP }}
